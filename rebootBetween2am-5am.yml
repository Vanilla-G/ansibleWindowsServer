---
- name: Install all updates and reboot as many times as needed
  hosts: all
  tasks:
  
    - name: Create Directory for Logs
      ansible.windows.win_file:
        path: c:\temp
        state: directory

    - name: Start Windows Patching
      ansible.windows.win_updates:
        category_names: "*"
        reboot: no
        log_path: c:\temp\patching.txt
      register: update_result
      until: update_result.found_update_count == 0
      retries: 5
      delay: 30

    - name: Check if a reboot is required
      win_shell: |
        $results = @{'needs_reboot'=$false ; 'reason'=@()}
        $regpath = "HKLM:\Software\Microsoft\Windows\CurrentVersion\Component Based Servicing\RebootPending"
        if (Get-ChildItem -Path $regpath -ErrorAction Ignore) {
          $results['needs_reboot']=$true
          $results['reason']+='Component Based Servicing'
        }
        $regpath = "HKLM:\SOFTWARE\Microsoft\Windows\CurrentVersion\WindowsUpdate\Auto Update\RebootRequired"
        if (Get-Item -Path $regpath -ErrorAction Ignore) {
          $results['needs_reboot']=$true
          $results['reason']+='WindowsUpdate'
        }
        try {
          $util = [wmiclass]"\\.\root\ccm\clientsdk:CCM_ClientUtilities"
          $status = $util.DetermineIfRebootPending()
          if(($status -ne $null) -and $status.RebootPending){
            $results['needs_reboot']=$true
            $results['reason']+='CCM_RebootPending'
          }
        } catch{}
        return $results | ConvertTo-Json
      register: needs_reboot

    - name: Store reboot requirement for later use
      set_fact:
        needs_reboot: "{{ needs_reboot.stdout.needs_reboot | default(false) }}"

    - name: Debug output of reboot requirement
      debug:
        var: needs_reboot

    - name: Get current hour
      win_shell: (Get-Date).Hour
      register: current_hour

    - name: Debug output of current hour
      debug:
        var: current_hour.stdout

    - name: Reboot if required (only during maintenance window)
      ansible.windows.win_reboot:
      when: 
        - needs_reboot | bool
        - current_hour.stdout | int >= 2
        - current_hour.stdout | int < 5

    - name: Re-run Windows Patching after reboot (if needed)
      ansible.windows.win_updates:
        category_names: "*"
        reboot: no
        log_path: c:\temp\patching_after_reboot.txt
      register: post_reboot_update_result
      until: post_reboot_update_result.found_update_count == 0
      retries: 5
      delay: 30
